- name: Install and Configure WireGuard on WireGuard EC2
  hosts: wireguard
  vars_files:
    - /home/ubuntu/ansible/var.yml
  become: yes
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install WireGuard
      apt:
        name: wireguard
        state: present

    - name: Ensure /etc/wireguard directory exists
      file:
        path: /etc/wireguard
        state: directory
        mode: '0700'

    - name: Check if private key already exists
      stat:
        path: /etc/wireguard/privatekey
      register: privatekey_stat

    - name: Generate WireGuard server private key if not exists
      command: wg genkey
      register: wg_private_key
      when: not privatekey_stat.stat.exists

    - name: Save WireGuard private key to file
      copy:
        content: "{{ wg_private_key.stdout }}"
        dest: /etc/wireguard/privatekey
        mode: '0600'
      when: not privatekey_stat.stat.exists

    - name: Read existing private key
      slurp:
        src: /etc/wireguard/privatekey
      register: existing_private_key

    - name: Decode private key
      set_fact:
        wireguard_private_key: "{{ existing_private_key.content | b64decode }}"

    - name: Generate WireGuard public key
      command: echo "{{ wireguard_private_key }}" | wg pubkey
      register: wg_public_key
      changed_when: false

    - name: Create WireGuard configuration file using template
      template:
        src: wg0.conf.j2
        dest: /etc/wireguard/wg0.conf
        mode: '0600'

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        state: present
        reload: yes

    - name: Start and enable WireGuard service
      systemd:
        name: wg-quick@wg0
        enabled: yes
        state: started
